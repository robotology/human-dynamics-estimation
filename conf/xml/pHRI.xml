<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE robot PUBLIC "-//YARP//DTD yarprobotinterface 3.0//EN" "http://www.yarp.it/DTD/yarprobotinterfaceV3.0.dtd">
<robot name="pHRI-HDE" build=0 portprefix="">

    <device type="transformServer" name="TransformServer">
        <param name="period">0.01</param>
        <param name="transforms_lifetime">0.2</param>
        <group name="ROS">
            <param name="enable_ros_publisher">true</param>
            <param name="enable_ros_subscriber">false</param>
        </group>
    </device>

    <device type="iwear_remapper" name="XSenseIWearRemapper">
        <param name="wearableDataPorts">(/XSensSuit/WearableData/data:o)</param>
        <param name="useRPC">false</param>
        <param name="wearableRPCPorts">(/XSensSuit/WearableData/metadataRpc:o)</param>
        <param name="outputPortName">/HDE/XsensIWearRemapper/data:o</param>
    </device>

    <device type="human_state_provider" name="HumanStateProvider">
        <param name="period">0.02</param>
        <param name="urdf">humanSubject01_66dof.urdf</param>
        <param name="floatingBaseFrame">(Pelvis, XsensSuit::vLink::Pelvis)</param>
        <!-- ikSolver options: pairwised, global, integrationbased -->
        <param name="ikSolver">integrationbased</param>
        <param name="useXsensJointsAngles">false</param>
        <param name="allowIKFailures">true</param>
        <param name="useDirectBaseMeasurement">false</param>
        <!-- optimization parameters -->
        <param name="maxIterationsIK">300</param>
        <param name="ikLinearSolver">ma27</param>
        <param name="ikPoolSizeOption">2</param>
        <param name="posTargetWeight">0.0</param>
        <param name="rotTargetWeight">1.0</param>
        <param name="costRegularization">0.000001</param>
        <param name="costTolerance">0.001</param>
        <!-- inverse velocity kinematics parameters -->
        <!-- inverseVelocityKinematicsSolver values:
        moorePenrose,
        completeOrthogonalDecomposition,
        leastSquare,
        choleskyDecomposition,
        sparseCholeskyDecomposition,
        robustCholeskyDecomposition,
        sparseRobustCholeskyDecomposition -->
        <param name='inverseVelocityKinematicsSolver'>sparseRobustCholeskyDecomposition</param>
        <param name="linVelTargetWeight">0.0</param>
        <param name="angVelTargetWeight">1.0</param>
        <!-- integration based IK parameters -->
        <param name='integrationBasedJointVelocityLimit'>10.0</param> <!-- comment or -1.0 for no limits -->
        <param name="integrationBasedIKMeasuredVelocityGainLinRot">(1.0 1.0)</param>
        <param name="integrationBasedIKCorrectionGainsLinRot">(8.0 20.0)</param>
        <param name="integrationBasedIKIntegralCorrectionGainsLinRot">(0.0 0.0)</param>
        <group name="MODEL_TO_DATA_LINK_NAMES">
            <param name="map_Pelvis">(Pelvis, XsensSuit::vLink::Pelvis)</param>
            <param name="map_L5">(L5, XsensSuit::vLink::L5)</param>
            <param name="map_L3">(L3, XsensSuit::vLink::L3)</param>
            <param name="map_T12">(T12, XsensSuit::vLink::T12)</param>
            <param name="map_T8">(T8, XsensSuit::vLink::T8)</param>
            <param name="map_Neck">(Neck, XsensSuit::vLink::Neck)</param>
            <param name="map_Head">(Head, XsensSuit::vLink::Head)</param>
            <param name="map_RightShoulder">(RightShoulder, XsensSuit::vLink::RightShoulder)</param>
            <param name="map_RightUpperArm">(RightUpperArm, XsensSuit::vLink::RightUpperArm)</param>
            <param name="map_RightForeArm">(RightForeArm, XsensSuit::vLink::RightForeArm)</param>
            <param name="map_RightHand">(RightHand, XsensSuit::vLink::RightHand)</param>
            <param name="map_LeftShoulder">(LeftShoulder, XsensSuit::vLink::LeftShoulder)</param>
            <param name="map_LeftUpperArm">(LeftUpperArm, XsensSuit::vLink::LeftUpperArm)</param>
            <param name="map_LeftForeArm">(LeftForeArm, XsensSuit::vLink::LeftForeArm)</param>
            <param name="map_LeftHand">(LeftHand, XsensSuit::vLink::LeftHand)</param>
            <param name="map_RightUpperLeg">(RightUpperLeg, XsensSuit::vLink::RightUpperLeg)</param>
            <param name="map_RightLowerLeg">(RightLowerLeg, XsensSuit::vLink::RightLowerLeg)</param>
            <param name="map_RightFoot">(RightFoot, XsensSuit::vLink::RightFoot)</param>
            <param name="map_RightToe">(RightToe, XsensSuit::vLink::RightToe)</param>
            <param name="map_LeftUpperLeg">(LeftUpperLeg, XsensSuit::vLink::LeftUpperLeg)</param>
            <param name="map_LeftLowerLeg">(LeftLowerLeg, XsensSuit::vLink::LeftLowerLeg)</param>
            <param name="map_LeftFoot">(LeftFoot, XsensSuit::vLink::LeftFoot)</param>
            <param name="map_LeftToe">(LeftToe, XsensSuit::vLink::LeftToe)</param>
        </group>
        <group name="MODEL_TO_DATA_JOINT_NAMES">
           <!-- TODO: this groups is here for configuring the data that might initialize the IK. -->
           <!--       However, the zeros and frames from Xsens might be different and we have to -->
           <!--       figure this out. -->
           <!-- Example: (model joint name, wearable sensor name, wearable sensor component) -->
           <param name="map_jL5S1_rotx">(jL5S1_rotx, XsensSuit::vSJoint::jL5S1, 0)</param>
           <param name="map_jL5S1_roty">(jL5S1_roty, XsensSuit::vSJoint::jL5S1, 1)</param>
           <param name="map_jL5S1_rotz">(jL5S1_rotz, XsensSuit::vSJoint::jL5S1, 2)</param>
           <param name="map_jL4L3_rotx">(jL4L3_rotx, XsensSuit::vSJoint::jL4L3, 0)</param>
           <param name="map_jL4L3_roty">(jL4L3_roty, XsensSuit::vSJoint::jL4L3, 1)</param>
           <param name="map_jL4L3_rotz">(jL4L3_rotz, XsensSuit::vSJoint::jL4L3, 2)</param>
           <param name="map_jL1T12_rotx">(jL1T12_rotx, XsensSuit::vSJoint::jL1T12, 0)</param>
           <param name="map_jL1T12_roty">(jL1T12_roty, XsensSuit::vSJoint::jL1T12, 1)</param>
           <param name="map_jL1T12_rotz">(jL1T12_rotz, XsensSuit::vSJoint::jL1T12, 2)</param>
           <param name="map_jT9T8_rotx">(jT9T8_rotx, XsensSuit::vSJoint::jT9T8, 0)</param>
           <param name="map_jT9T8_roty">(jT9T8_roty, XsensSuit::vSJoint::jT9T8, 1)</param>
           <param name="map_jT9T8_rotz">(jT9T8_rotz, XsensSuit::vSJoint::jT9T8, 2)</param>
           <param name="map_jT1C7_rotx">(jT1C7_rotx, XsensSuit::vSJoint::jT1C7, 0)</param>
           <param name="map_jT1C7_roty">(jT1C7_roty, XsensSuit::vSJoint::jT1C7, 1)</param>
           <param name="map_jT1C7_rotz">(jT1C7_rotz, XsensSuit::vSJoint::jT1C7, 2)</param>
           <param name="map_jC1Head_rotx">(jC1Head_rotx, XsensSuit::vSJoint::jC1Head, 0)</param>
           <param name="map_jC1Head_roty">(jC1Head_roty, XsensSuit::vSJoint::jC1Head, 1)</param>
           <param name="map_jC1Head_rotz">(jC1Head_rotz, XsensSuit::vSJoint::jC1Head, 2)</param>
           <!-- Be aware that here the names differ: C7 ==> T4 -->
           <param name="map_jRightC7Shoulder_rotx">(jRightC7Shoulder_rotx, XsensSuit::vSJoint::jRightT4Shoulder, 0)</param>
           <param name="map_jRightC7Shoulder_roty">(jRightC7Shoulder_roty, XsensSuit::vSJoint::jRightT4Shoulder, 1)</param>
           <param name="map_jRightC7Shoulder_rotz">(jRightC7Shoulder_rotz, XsensSuit::vSJoint::jRightT4Shoulder, 2)</param>
           <param name="map_jRightShoulder_rotx">(jRightShoulder_rotx, XsensSuit::vSJoint::jRightShoulder, 0)</param>
           <param name="map_jRightShoulder_roty">(jRightShoulder_roty, XsensSuit::vSJoint::jRightShoulder, 1)</param>
           <param name="map_jRightShoulder_rotz">(jRightShoulder_rotz, XsensSuit::vSJoint::jRightShoulder, 2)</param>
           <param name="map_jRightElbow_rotx">(jRightElbow_rotx, XsensSuit::vSJoint::jRightElbow, 0)</param>
           <param name="map_jRightElbow_roty">(jRightElbow_roty, XsensSuit::vSJoint::jRightElbow, 1)</param>
           <param name="map_jRightElbow_rotz">(jRightElbow_rotz, XsensSuit::vSJoint::jRightElbow, 2)</param>
           <param name="map_jRightWrist_rotx">(jRightWrist_rotx, XsensSuit::vSJoint::jRightWrist, 0)</param>
           <param name="map_jRightWrist_roty">(jRightWrist_roty, XsensSuit::vSJoint::jRightWrist, 1)</param>
           <param name="map_jRightWrist_rotz">(jRightWrist_rotz, XsensSuit::vSJoint::jRightWrist, 2)</param>
           <!-- Be aware that here the names differ: C7 ==> T4 -->
           <param name="map_jLeftC7Shoulder_rotx">(jLeftC7Shoulder_rotx, XsensSuit::vSJoint::jLeftT4Shoulder, 0)</param>
           <param name="map_jLeftC7Shoulder_roty">(jLeftC7Shoulder_roty, XsensSuit::vSJoint::jLeftT4Shoulder, 1)</param>
           <param name="map_jLeftC7Shoulder_rotz">(jLeftC7Shoulder_rotz, XsensSuit::vSJoint::jLeftT4Shoulder, 2)</param>
           <param name="map_jLeftShoulder_rotx">(jLeftShoulder_rotx, XsensSuit::vSJoint::jLeftShoulder, 0)</param>
           <param name="map_jLeftShoulder_roty">(jLeftShoulder_roty, XsensSuit::vSJoint::jLeftShoulder, 1)</param>
           <param name="map_jLeftShoulder_rotz">(jLeftShoulder_rotz, XsensSuit::vSJoint::jLeftShoulder, 2)</param>
           <param name="map_jLeftElbow_rotx">(jLeftElbow_rotx, XsensSuit::vSJoint::jLeftElbow, 0)</param>
           <param name="map_jLeftElbow_roty">(jLeftElbow_roty, XsensSuit::vSJoint::jLeftElbow, 1)</param>
           <param name="map_jLeftElbow_rotz">(jLeftElbow_rotz, XsensSuit::vSJoint::jLeftElbow, 2)</param>
           <param name="map_jLeftWrist_rotx">(jLeftWrist_rotx, XsensSuit::vSJoint::jLeftWrist, 0)</param>
           <param name="map_jLeftWrist_roty">(jLeftWrist_roty, XsensSuit::vSJoint::jLeftWrist, 1)</param>
           <param name="map_jLeftWrist_rotz">(jLeftWrist_rotz, XsensSuit::vSJoint::jLeftWrist, 2)</param>
           <param name="map_jRightHip_rotx">(jRightHip_rotx, XsensSuit::vSJoint::jRightHip, 0)</param>
           <param name="map_jRightHip_roty">(jRightHip_roty, XsensSuit::vSJoint::jRightHip, 1)</param>
           <param name="map_jRightHip_rotz">(jRightHip_rotz, XsensSuit::vSJoint::jRightHip, 2)</param>
           <param name="map_jRightKnee_rotx">(jRightKnee_rotx, XsensSuit::vSJoint::jRightKnee, 0)</param>
           <param name="map_jRightKnee_roty">(jRightKnee_roty, XsensSuit::vSJoint::jRightKnee, 1)</param>
           <param name="map_jRightKnee_rotz">(jRightKnee_rotz, XsensSuit::vSJoint::jRightKnee, 2)</param>
           <param name="map_jRightAnkle_rotx">(jRightAnkle_rotx, XsensSuit::vSJoint::jRightAnkle, 0)</param>
           <param name="map_jRightAnkle_roty">(jRightAnkle_roty, XsensSuit::vSJoint::jRightAnkle, 1)</param>
           <param name="map_jRightAnkle_rotz">(jRightAnkle_rotz, XsensSuit::vSJoint::jRightAnkle, 2)</param>
           <param name="map_jRightBallFoot_rotx">(jRightBallFoot_rotx, XsensSuit::vSJoint::jRightBallFoot, 0)</param>
           <param name="map_jRightBallFoot_roty">(jRightBallFoot_roty, XsensSuit::vSJoint::jRightBallFoot, 1)</param>
           <param name="map_jRightBallFoot_rotz">(jRightBallFoot_rotz, XsensSuit::vSJoint::jRightBallFoot, 2)</param>
           <param name="map_jLeftHip_rotx">(jLeftHip_rotx, XsensSuit::vSJoint::jLeftHip, 0)</param>
           <param name="map_jLeftHip_roty">(jLeftHip_roty, XsensSuit::vSJoint::jLeftHip, 1)</param>
           <param name="map_jLeftHip_rotz">(jLeftHip_rotz, XsensSuit::vSJoint::jLeftHip, 2)</param>
           <param name="map_jLeftKnee_rotx">(jLeftKnee_rotx, XsensSuit::vSJoint::jLeftKnee, 0)</param>
           <param name="map_jLeftKnee_roty">(jLeftKnee_roty, XsensSuit::vSJoint::jLeftKnee, 1)</param>
           <param name="map_jLeftKnee_rotz">(jLeftKnee_rotz, XsensSuit::vSJoint::jLeftKnee, 2)</param>
           <param name="map_jLeftAnkle_rotx">(jLeftAnkle_rotx, XsensSuit::vSJoint::jLeftAnkle, 0)</param>
           <param name="map_jLeftAnkle_roty">(jLeftAnkle_roty, XsensSuit::vSJoint::jLeftAnkle, 1)</param>
           <param name="map_jLeftAnkle_rotz">(jLeftAnkle_rotz, XsensSuit::vSJoint::jLeftAnkle, 2)</param>
           <param name="map_jLeftBallFoot_rotx">(jLeftBallFoot_rotx, XsensSuit::vSJoint::jLeftBallFoot, 0)</param>
           <param name="map_jLeftBallFoot_roty">(jLeftBallFoot_roty, XsensSuit::vSJoint::jLeftBallFoot, 1)</param>
           <param name="map_jLeftBallFoot_rotz">(jLeftBallFoot_rotz, XsensSuit::vSJoint::jLeftBallFoot, 2)</param>
        </group>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="HumanStateProviderLabel">XSenseIWearRemapper</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach"/>
    </device>

    <!-- Uncomment to stream the output of HumanStateProvider on a YARP port -->
    <!-- <device type="human_state_wrapper" name="HumanStateWrapper">
        <param name="period">0.02</param>
        <param name="outputPort">/HDE/HumanStateWrapper/state:o</param>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="HumanStateWrapperLabel">HumanStateProvider</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach"/>
    </device> -->

    <device type="human_state_publisher" name="HumanStatePublisher">
        <param name="period">0.02</param>
        <param name="baseTFName">/Human/Pelvis</param>
        <param name="humanJointsTopic">/Human/joint_states</param>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="HumanStatePublisherLabel">HumanStateProvider</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach"/>
    </device>

    <device type="iwear_remapper" name="FTSourcesIWearRemapper">
        <param name="wearableDataPorts">(/FTShoeLeft/WearableData/data:o /FTShoeRight/WearableData/data:o /ICub/WearableData/data:o)</param>
        <param name="useRPC">false</param>
        <param name="wearableRPCPorts">(/FTShoeLeft/WearableData/metadataRpc:o /FTShoeRight/WearableData/metadataRpc:o /ICub/WearableData/metadataRpc:o)</param>
        <param name="outputPortName">/HDE/FTSourcesIWearRemapper/data:o</param>
    </device>

    <device type="human_wrench_provider" name="HumanWrenchProvider">
        <param name="period">0.02</param>
        <param name="human_urdf">humanSubject01_66dof.urdf</param>
        <param name="pHRIScenario">true</param>
        <param name="robot_urdf">model.urdf</param>
        <param name="number_of_source_devices">3</param>
        <param name="number_of_sources">4</param>
        <param name="sources">(FTShoeLeft FTShoeRight RobotLeftHandFT RobotRightHandFT)</param>
        <group name="FTShoeLeft">
            <param name="sensorName">FTShoeLeftFTSensors</param>
            <param name="outputFrame">LeftFoot</param>
            <param name="type">fixed</param>
            <param name="rotation">(1.0 0.0 0.0
                                    0.0 1.0 0.0
                                    0.0 0.0 1.0)</param>
            <param name="position">(-0.0026 0.0 -0.1208)</param>
        </group>
        <group name="FTShoeRight">
            <param name="sensorName">FTShoeRightFTSensors</param>
            <param name="outputFrame">RightFoot</param>
            <param name="type">fixed</param>
            <param name="rotation">(1.0 0.0 0.0
                                    0.0 1.0 0.0
                                    0.0 0.0 1.0)</param>
            <param name="position">(-0.0026 0.0 -0.1208)</param>
        </group>
        <group name="RobotLeftHandFT">
            <param name="sensorName">ICub::ft6D::leftWBDFTSensor</param>
            <param name="outputFrame">RightHand</param>
            <param name="type">robot</param>
            <param name="rotation">(-1.0 0.0 0.0 0.0 -1.0 0.0 0.0 0.0 1.0)</param>
            <param name="position">(0.59 0.0 0.0)</param>
            <param name="humanLinkingFrame">RightFoot</param>
            <param name="robotLinkingFrame">l_sole</param>
            <param name="robotSourceOriginFrame">l_hand</param>
            <param name="robotSourceOrientationFrame">root_link</param>
            <param name="humanFootPosition">(0.0 0.0 0.0918)</param>
        </group>
        <group name="RobotRightHandFT">
            <param name="sensorName">ICub::ft6D::rightWBDFTSensor</param>
            <param name="outputFrame">LeftHand</param>
            <param name="type">robot</param>
            <param name="rotation">(-1.0 0.0 0.0 0.0 -1.0 0.0 0.0 0.0 1.0)</param>
            <param name="position">(0.59 0.0 0.0)</param>
            <param name="humanLinkingFrame">LeftFoot</param>
            <param name="robotLinkingFrame">r_sole</param>
            <param name="robotSourceOriginFrame">r_hand</param>
            <param name="robotSourceOrientationFrame">root_link</param>
            <param name="humanFootPosition">(0.0 0.0 0.0918)</param>
        </group>
        <group name="RobotJoints">
            <param name="head">(neck_pitch neck_roll neck_yaw)</param>
            <param name="torso">(torso_yaw torso_roll torso_pitch)</param>
            <param name="left_arm">(l_shoulder_pitch l_shoulder_roll l_shoulder_yaw l_elbow l_wrist_prosup l_wrist_pitch l_wrist_yaw)</param>
            <param name="right_arm">(r_shoulder_pitch r_shoulder_roll r_shoulder_yaw r_elbow r_wrist_prosup r_wrist_pitch r_wrist_yaw)</param>
            <param name="left_leg">(l_hip_pitch l_hip_roll l_hip_yaw l_knee l_ankle_pitch l_ankle_roll)</param>
            <param name="right_leg">(r_hip_pitch r_hip_roll r_hip_yaw r_knee r_ankle_pitch r_ankle_roll)</param>
        </group>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="HumanWrenchProviderLabelHumanStateProvider">HumanStateProvider</elem>
                <elem name="HumanWrenchProviderLabelFTShoeLeft">FTSourcesIWearRemapper</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach" />
    </device>

    <!--device type="analogServer" name="HumanWrenchWrapper">
        <param name="name">/HDE/HumanWrenchWrapper/wrench:o</param>
        <param name="period">10</param>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="HumanWrenchWrapperLabel">HumanWrenchProvider</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach" />
    </device-->

    <!--Wrapper to publish WrenchStamped message to Rviz-->
    <device type="analogServer" name="HumanWrenchPublisher">
        <param name="name">/HDE/HumanWrenchPublisher/wrench:o</param>
        <param name="period">20</param>
        <param name="channels">24</param>
        <paramlist name="ports">
            <elem name="FirstSetOfChannels">0 5 0 5</elem>
            <elem name="SecondSetOfChannels">6 11 0 5</elem>
            <elem name="ThirdSetOfChannels">12 17 0 5</elem>
            <elem name="FourthSetOfChannels">18 23 0 5</elem>
        </paramlist>
        <group name="ROS">
            <param name="useROS">true</param>
            <param name="ROS_topicName">(/HDE/WrenchStamped/LeftFoot /HDE/WrenchStamped/RightFoot /HDE/WrenchStamped/RightHand /HDE/WrenchStamped/LeftHand)</param>
            <param name="ROS_nodeName">/HDE/HumanWrenchPublisherNode</param>
            <param name="ROS_msgType">geometry_msgs/WrenchStamped</param>
            <param name="frame_id">(Human/LeftFoot Human/RightFoot Human/RightHand Human/LeftHand)</param>
        </group>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="HumanWrenchPublisherLabel">HumanWrenchProvider</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="4" type="detach" />
    </device>

    <device type="human_dynamics_estimator" name="HumanDynamicsEstimator">
        <param name="period">0.02</param>
        <param name="urdf">humanSubject01_66dof.urdf</param>
        <param name="baseLink">Pelvis</param>
        <param name="number_of_wrench_sensors">4</param>
        <param name="wrench_sensors_link_name">(LeftFoot RightFoot RightHand LeftHand)</param>
        <group name="PRIORS">
            <param name="cov_dyn_variables">10000.0</param>
            <param name="cov_dyn_constraints">0.0001</param>
            <param name="mu_dyn_variables">0.0001</param>
            <param name="cov_measurements_ACCELEROMETER_SENSOR">(0.0011 0.0011 0.0011)</param>
            <param name="cov_measurements_DOF_ACCELERATION_SENSOR">0.666e-5</param>
            <group name="cov_measurements_NET_EXT_WRENCH_SENSOR">
                <param name="value">1e-6</param>
                <param name="specific_elements">(LeftFoot RightFoot RightHand LeftHand)</param>
                <param name="LeftFoot">(0.0589998348 0.0589998348 0.0359999712 0.002250000225 0.002250000225 0.56e-3)</param>
                <param name="RightFoot">(0.0589998348 0.0589998348 0.0359999712 0.002250000225 0.002250000225 0.56e-3)</param>
                <param name="RightHand">(0.0589998348 0.0589998348 0.0359999712 0.002250000225 0.002250000225 0.56e-3)</param>
                <param name="LeftHand">(0.0589998348 0.0589998348 0.0359999712 0.002250000225 0.002250000225 0.56e-3)</param>
            </group>
        </group>
        <group name="SENSORS_REMOVAL">
            <param name="GYROSCOPE_SENSOR">*</param>
        </group>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="HumanDynamicsEstimatorLabel1">HumanStateProvider</elem>
                <elem name="HumanDynamicsEstimatorLabel2">HumanWrenchProvider</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach"/>
    </device>

    <!--device type="human_dynamics_wrapper" name="HumanDynamicsWrapper">
        <param name="period">0.1</param>
        <param name="outputPort">/HDE/HumanDynamicsWrapper/torques:o</param>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="HumanDynamicsWrapperLabel">HumanDynamicsEstimator</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach"/>
    </device-->

    <device type="human_dynamics_publisher" name="HumanDynamicsPublisher">
        <param name="period">0.010</param>
        <param name="parentLinkNames">(LeftFoot LeftLowerLeg LeftUpperLeg LeftHand LeftForeArm LeftUpperArm RightFoot RightLowerLeg RightUpperLeg RightHand RightForeArm RightUpperArm)</param>
        <param name="sphericalJointNames">(jLeftAnkle jLeftKnee jLeftHip jLeftWrist jLeftElbow jLeftShoulder jRightAnkle jRightKnee jRightHip jRightWrist jRightElbow jRightShoulder)</param>
        <param name="topicPrefix">/HumanEffortBridge</param>
        <param name="tfPrefix">Human</param>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="HumanDynamicsPublisherLabel">HumanDynamicsEstimator</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="4" type="detach"/>
    </device>

    <device type="human_control_board" name="HumanControlBoard">
        <param name="period">0.0100</param>
        <param name="urdf">humanSubject03_66dof.urdf</param>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="HumanControlBoardLabel1">HumanStateProvider</elem>
                <elem name="HumanControlBoardLabel2">HumanDynamicsEstimator</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach"/>
    </device>

    <device type="controlboardwrapper2" name="HumanControlBoardWrapper">
        <param name="period">1</param>
        <param name="name">/Human/HumanControlBoard</param>
        <param name="joints">66</param>
        <paramlist name="networks">
            <elem name="HumanJoints">0 65 0 65</elem>
        </paramlist>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="HumanJoints">HumanControlBoard</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach"/>
    </device>

    <!--Uncomment the following code if you need to dump wearable data-->
    <device type="iwear_remapper" name="pHRIWearableData">
        <param name="wearableDataPorts">(/XSensSuit/WearableData/data:o /FTShoeLeft/WearableData/data:o /FTShoeRight/WearableData/data:o /ICub/WearableData/data:o)</param>
        <param name="useRPC">false</param>
        <param name="wearableRPCPorts">(/XSensSuit/WearableData/metadataRpc:o /FTShoeLeft/WearableData/metadataRpc:o /FTShoeRight/WearableData/metadataRpc:o /ICub/WearableData/metadataRpc:o)</param>
        <param name="outputPortName">/pHRI/IWearRemapper/data:o</param>
    </device>

    <device type="iwear_wrapper" name="pHRIWearableDataWrapper">
        <param name="period">0.1</param>
        <param name="dataPortName">/pHRI/WearableData/data:o</param>
        <param name="rpcPortName">/pHRI/WearableData/metadataRpc:o</param>
        <action phase="startup" level="5" type="attach">
            <paramlist name="networks">
                <elem name="WearableDataWrapper">pHRIWearableData</elem>
            </paramlist>
        </action>
        <action phase="shutdown" level="5" type="detach"/>
    </device>

</robot>
