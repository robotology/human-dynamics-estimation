cmake_minimum_required(VERSION 2.8.9)
project(xsensTFBridge)

find_package(YARP REQUIRED)
list(APPEND CMAKE_MODULE_PATH ${YARP_MODULE_PATH})
include(YarpInstallationHelpers)
include(YarpIDL)
include(GNUInstallDirs)

find_package(iDynTree REQUIRED)

yarp_idl_to_dir("${CMAKE_CURRENT_SOURCE_DIR}/thrift/XsensFrame.thrift" "${CMAKE_CURRENT_BINARY_DIR}/autogenerated/data" THRIFT_SOURCES THRIFT_HEADERS THRIFT_INCLUDE_DIRS)
yarp_idl_to_dir("${CMAKE_CURRENT_SOURCE_DIR}/thrift/XsensDriverService.thrift" "${CMAKE_CURRENT_BINARY_DIR}/autogenerated/services" THRIFT_SERVICE_SOURCES THRIFT_SERVICE_HEADERS THRIFT_SERVICE_INCLUDE_DIRS)

yarp_idl_to_dir("${CMAKE_CURRENT_SOURCE_DIR}/msgs/String.msg" "${CMAKE_CURRENT_BINARY_DIR}/autogenerated/msgs" STRING_SOURCES STRING_HEADERS STRING_INCLUDE_DIRS)
yarp_idl_to_dir("${CMAKE_CURRENT_SOURCE_DIR}/msgs/std_msgs/Header.msg" "${CMAKE_CURRENT_BINARY_DIR}/autogenerated/msgs" HEADER_SOURCES HEADER_HEADERS HEADER_INCLUDE_DIRS)
yarp_idl_to_dir("${CMAKE_CURRENT_SOURCE_DIR}/msgs/geometry_msgs/Quaternion.msg" "${CMAKE_CURRENT_BINARY_DIR}/autogenerated/msgs" QUATERNION_SOURCES QUATERNION_HEADERS QUATERNION_INCLUDE_DIRS)
yarp_idl_to_dir("${CMAKE_CURRENT_SOURCE_DIR}/msgs/geometry_msgs/Transform.msg" "${CMAKE_CURRENT_BINARY_DIR}/autogenerated/msgs" TRANSFORM_SOURCES TRANSFORM_HEADERS TRANSFORM_INCLUDE_DIRS)
yarp_idl_to_dir("${CMAKE_CURRENT_SOURCE_DIR}/msgs/geometry_msgs/TransformStamped.msg" "${CMAKE_CURRENT_BINARY_DIR}/autogenerated/msgs" TRANSFORMSTAMPED_SOURCES TRANSFORMSTAMPED_HEADERS TRANSFORMSTAMPED_INCLUDE_DIRS)
yarp_idl_to_dir("${CMAKE_CURRENT_SOURCE_DIR}/msgs/geometry_msgs/Vector3.msg" "${CMAKE_CURRENT_BINARY_DIR}/autogenerated/msgs" VECTOR_SOURCES VECTOR_HEADERS VECTOR_INCLUDE_DIRS)
yarp_idl_to_dir("${CMAKE_CURRENT_SOURCE_DIR}/msgs/geometry_msgs/Wrench.msg" "${CMAKE_CURRENT_BINARY_DIR}/autogenerated/msgs" WRENCH_SOURCES WRENCH_HEADERS WRENCH_INCLUDE_DIRS)
yarp_idl_to_dir("${CMAKE_CURRENT_SOURCE_DIR}/msgs/geometry_msgs/WrenchStamped.msg" "${CMAKE_CURRENT_BINARY_DIR}/autogenerated/msgs" WRENCHSTAMPED_SOURCES WRENCHSTAMPED_HEADERS WRENCHSTAMPED_INCLUDE_DIRS)
yarp_idl_to_dir("${CMAKE_CURRENT_SOURCE_DIR}/msgs/tf2_msgs/TFMessage.msg" "${CMAKE_CURRENT_BINARY_DIR}/autogenerated/msgs" TFMESSAGE_SOURCES TFMESSAGE_HEADERS TFMESSAGE_INCLUDE_DIRS)
yarp_idl_to_dir("${CMAKE_CURRENT_SOURCE_DIR}/msgs/sensor_msgs/JointState.msg" "${CMAKE_CURRENT_BINARY_DIR}/autogenerated/msgs" JOINTSTATE_SOURCES JOINTSTATE_HEADERS JOINTSTATE_INCLUDE_DIRS)
yarp_idl_to_dir("${CMAKE_CURRENT_SOURCE_DIR}/msgs/tf/tfMessage.msg" "${CMAKE_CURRENT_BINARY_DIR}/autogenerated/msgs" TFTFMESSAGE_SOURCES TFTFMESSAGE_HEADERS TFTFMESSAGE_INCLUDE_DIRS)

add_library(thriftLibrary ${THRIFT_SOURCES} ${THRIFT_HEADERS} ${THRIFT_SERVICE_SOURCES} ${THRIFT_SERVICE_HEADERS})
target_link_libraries(thriftLibrary ${YARP_LIBRARIES} YARP::YARP_OS)
target_include_directories(thriftLibrary PUBLIC ${THRIFT_INCLUDE_DIRS}
                                                ${THRIFT_SERVICE_INCLUDE_DIRS})
target_include_directories(thriftLibrary SYSTEM PUBLIC ${YARP_INCLUDE_DIRS})

add_executable(xsensTFBridge src/xsensTFBridge.cpp ${STRING_SOURCES} ${STRING_HEADERS} ${TFMESSAGE_SOURCES} ${TFMESSAGE_HEADERS} ${HEADER_SOURCES} ${HEADER_HEADERS} ${QUATERNION_SOURCES} ${QUATERNION_HEADERS} ${TRANSFORM_SOURCES} ${TRANSFORM_HEADERS} ${TRANSFORMSTAMPED_SOURCES} ${TRANSFORMSTAMPED_HEADERS} ${TRANSFORMSTAMPED_SOURCES} ${VECTOR_HEADERS} ${WRENCH_SOURCES} ${WRENCH_HEADERS} ${WRENCHSTAMPED_SOURCES} ${WRENCHSTAMPED_HEADERS} ${JOINTSTATE_SOURCES} ${JOINTSTATE_HEADERS} ${TFTFMESSAGE_SOURCES} ${TFTFMESSAGE_HEADERS})


target_link_libraries(xsensTFBridge ${YARP_LIBRARIES} thriftLibrary)

target_include_directories(xsensTFBridge PUBLIC ${YARP_INCLUDE_DIRS} "${CMAKE_CURRENT_SOURCE_DIR}/include" YARP::YARP_OS)
target_include_directories(xsensTFBridge PUBLIC ${STRING_INCLUDE_DIRS} ${TFMESSAGE_INCLUDE_DIRS} ${HEADER_INCLUDE_DIRS} ${QUATERNION_INCLUDE_DIRS} ${TRANSFORM_INCLUDE_DIRS} ${TRANSFORMSTAMPED_INCLUDE_DIRS} ${VECTOR_INCLUDE_DIRS} ${WRENCH_INCLUDE_DIRS} ${WRENCHSTAMPED_INCLUDE_DIRS} ${JOINTSTATE__INCLUDE_DIRS} ${TFTFMESSAGE__INCLUDE_DIRS})

#set(conf config/xsensTFBridge.ini)
#yarp_install(FILES ${conf} DESTINATION ${YARP_CONTEXTS_INSTALL_DIR}/human-dynamic-estimation)

#install(TARGETS xsensTFBridge DESTINATION ${CMAKE_INSTALL_FULL_BINDIR})

#### add the "uninstall" target
include(AddUninstallTarget)
